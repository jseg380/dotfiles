#!/bin/sh
# Variables
CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}"
LIBEXEC="$HOME/.local/libexec"


# Screen, wallpaper {{{
  # Monitors
  if ! set-monitor 2> /dev/null
  then
    mainMonitor=$(xrandr | grep -P ' connected .*primary.*' | awk '{print $1}')
    params=""

    while IFS= read -r line 
    do
      monitorName="$(echo $line | awk '{print $1}')"
      params="$params --output $monitorName --auto --left-of $mainMonitor"
    done < <(xrandr | grep 'connected' | grep -v "$mainMonitor")
    
    xrandr --output $mainMonitor --primary --auto $params
  fi

  # Compositor
  which picom && pgrep picom || picom & disown

  # Wallpaper
  which feh && {
    wallpaper="$CONFIG/wallpaper/wallpaper";
    [ -f "$wallpaper" ] || wallpaper="$CONFIG/wallpaper/fallback.png";
    feh --no-fehbg --bg-scale "$wallpaper";
  }
# }}}


# Input {{{
  # Keyboard layout
  setxkbmap es
  # To alternate between spanish (es) and english (us) layout by pressing
  # <Meta>(Win) and <Space> simultaneously
  # setxkbmap -layout es,us -option grp:win_space_toggle

  # Mouse
  mouseName="Logitech"
  mouseId=$(xinput list | grep -P "$mouseName\s+.*pointer" | 
            sed -n -E 's/.*id=([0-9]+).*/\1/p')
  if [ "$mouseId" != "" ]
  then
    xinput set-prop $mouseId \
           'Coordinate Transformation Matrix' 0.43 0 0 0 0.43 0 0 0 1
  fi

  # Touchpad
  touchpad="$(xinput list | grep -P 'Touchpad.*pointer')"
  if [ $(xinput list | grep 'Touchpad' | wc -l) -eq 1 ]
  then
    touchpad_id=$(awk '{match($0, /id=([0-9]+)/, m); print m[1]}' <<< "$touchpad")
    xinput set-prop $touchpad_id \
           'libinput Tapping Enabled' 1
    xinput set-prop $touchpad_id \
           'libinput Natural Scrolling Enabled' 1
    xinput set-prop $touchpad_id \
           'Coordinate Transformation Matrix'\
           0.75 0 0 0 0.75 0 0 0 1
  fi
# }}}


# Xresources {{{
  xrdb -load "$CONFIG/X11/Xresources"
# }}}


# Programs {{{
  # Uptime session
  echo $(date +"%s") > /tmp/start_session.tmp

  # Safe Eyes
  $LIBEXEC/safeeyes.sh & disown

  # Break
  $LIBEXEC/break.sh & disown

  # Activity
  $LIBEXEC/activity.py & disown
# }}}
