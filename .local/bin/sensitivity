#!/bin/bash
#
# Author: jseg380
# File: ~/.local/bin/sensitivity
#

#··············································································
# Variables {{{

programName="$(basename $0)"

mouseName="Logitech"
default="0.43 0 0 0 0.43 0 0 0 1"
reset="1 0 0 0 1 0 0 0 1"

# }}}


#··············································································
# Functions {{{

function info_program() {
cat << EOF
Usage: $programName [OPTION]

Change mouse sensitivity.

Options:
  -h, --help            display this help and exit
  -d, --default         sets sensitivity to default configuration
  -r, --reset           sets sensitivity to 1.0
EOF
}

function set_sensitivity() {
    local mouseId=$(xinput list | grep -P "$mouseName\s+.*pointer" | 
                    sed -n -E 's/.*id=([0-9]+).*/\1/p')

    [ "$mouseId" = "" ] && echo "No mouse detected" && exit 1

    xinput --set-prop $mouseId 'Coordinate Transformation Matrix' $1 && 
    echo "Sensitivity set to: $1"
}

# }}}


#··············································································
# Main {{{

if [ $# -eq 0 ]
then
    set_sensitivity "$default"
    exit 0
fi

if [ $# -ne 1 ]
then
    echo "$programName: too many arguments"
    echo "Try '$programName --help' for more information."
    exit 1
fi

case "$1" in
    "-h" | "--help")
        info_program
        exit 0
        ;;
    "-d" | "--default")
        set_sensitivity "$default"
        exit 0
        ;;
    "-r" | "--reset")
        set_sensitivity "$reset"
        exit 0
        ;;
    *)
        echo "$programName: unrecognized option '$1'"
        echo "Try '$programName --help' for more information."
        exit 1
        ;;
esac

# }}}
