#!/bin/bash
#
# Author: jseg380
# File: ~/.local/bin/battery
#

#··············································································
# Variables {{{

programName="$(basename $0)"

bat=$(upower -i /org/freedesktop/UPower/devices/battery_BAT1 | 
      grep 'percentage' | awk '{print int($2)}')
state=$(upower -i /org/freedesktop/UPower/devices/battery_BAT1 | 
      grep 'state' | awk '{print $2}')

xdgData="${XDG_DATA_HOME:-$HOME/.local/share}"
iconTemplate="${xdgData}/icons/battery/battery-{state}.svg"

# }}}


#··············································································
# Functions {{{

function info_program() {
cat << EOF
Usage: $programName [OPTION]

Show battery.

Options:
  -h, --help            display this help and exit
  -f, --full            shows brightness with a corresponding icon and sends
                        a notification
  -s, --simple          output battery as a number
  -n, --notification    sends a notification showing the battery
EOF
}

function get_battery_simple() {
    echo -n $bat
}

function get_battery() {
    local battery=$(get_battery_simple)

    icons="󰁺 󰁻 󰁼 󰁽 󰁾 󰁿 󰂀 󰂁 󰂂 󰁹"
    [ "$state" = "charging" ] || [ "$state" = "fully-charged" ] && 
        icons="󰢜  󰂆  󰂇  󰂈  󰢝  󰂉  󰢞  󰂊  󰂋  󰂅 "

    [ "$state" = "unknown" ] && 
        echo "󰂑 $battery%" && exit 0
    [ "$state" = "empty" ] || [ "$state" = "fully-discharged" ] && 
        echo "󰂎 $battery%" && exit 0

    echo "$(percentage $battery $icons) $battery%"
}

function send_notification() {
    svgName="full"
    if [ "$state" = "charging" ] || [ "$state" = "fully-charged" ]
    then
        svgName="charging"
    elif [ "$state" = "empty" ] || [ "$state" = "fully-discharged" ]
    then
        svgName="empty"
    elif [ "$state" = "unknown" ]
    then
        svgName="warning"
    fi
    
    local icon="${iconTemplate/\{state\}/$svgName}"

    notify-send -t 3000 -i "$icon" -e "Battery - $bat%" \
                "$(percentage $bat --repeat 󰹞 30)"
}

# }}}


#··············································································
# Main {{{

if [ $# -eq 0 ]
then
    get_battery
    exit 0
fi

if [ $# -ne 1 ]
then
    echo "$programName: too many arguments"
    echo "Try '$programName --help' for more information."
    exit 1
fi

case "$1" in
    "-h" | "--help")
        info_program
        exit 0
        ;;
    "-f" | "--full")
        get_battery
        send_notification
        exit 0
        ;;
    "-n" | "--notification")
        send_notification
        exit 0
        ;;
    "-s" | "--simple")
        get_battery_simple
        exit 0
        ;;
    *)
        echo "$programName: unrecognized option '$1'"
        echo "Try '$programName --help' for more information."
        exit 1
        ;;
esac

# }}}
